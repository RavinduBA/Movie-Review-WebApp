package com.ravindu2.movie;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.bson.types.ObjectId;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.DocumentReference;

import java.util.List;
/**
 * This class represents a Movie entity ,It is mapped to a MongoDB collection named "movies".
 */
@Document(collection = "movies")  // Maps this class to the "movies" collection in MongoDB
@Data  // Generates getters, setters, toString, equals, and hashCode methods
@AllArgsConstructor  // Generates a constructor with all fields as parameters
@NoArgsConstructor  // Generates a no-argument constructor
public class Movie {

    @Id  // Marks this field as the primary key in the MongoDB collection
    private ObjectId id;  // Unique identifier for the movie, generated by MongoDB

    private String imdbId;  // IMDB identifier for the movie
    private String title;  // Title of the movie
    private String releaseDate;  // Release date of the movie
    private String trailerLink;  // Link to the movie's trailer
    private String poster;  // URL to the movie's poster image
    private List<String> genres;  // List of genres associated with the movie
    private List<String> backdrops;  // List of URLs to backdrop images for the movie

    @DocumentReference  // References another collection, in this case, the reviews associated with this movie
    private List<Review> reviewIds;  // List of reviews associated with the movie
}

